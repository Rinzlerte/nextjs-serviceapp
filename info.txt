APP DEV FLOW

-- ui elemes  , theme switching

npx shadcn@latest init
npm install next-themes
npm @radix-ui/react-icons
npx shadcn@latest add


-- error handler sentry.io

npx @sentry/wizard@latest -i nextjs


-- auth service  kinde.com


npm i @kinde-oss/kinde-auth-nextjs



-- create Postgres data with Neon service Account

npm install @neondatabase/serverless


-- install ORM for site  - headless TypeScript ORM

npm i drizzle-orm   
npm i -D drizzle-kit tsx dotenv

create folder db. 
create schema and drizzle.config.ts

add script in package.json "db:generate": "drizzle-kit generate"  -- create instances
add script in package.json "db:migrate": "tsx ./src/db/migrate.ts"  -- merge instances up to neon service


add routes with query data:
/tickets/form/page.tsx 
/customers/form/page.tsx


-- install data type checkers 

npm i zod drizzle-zod react-hook-form @hookform/resolvers



-- create zods schemas  /src/zod-schemas

 dir zod..


-- add permisions control

npm i @kinde/management-api-js
npm i @kinde/

add settings in kinde dashboard - create api aplication
get and add env for api aplication / as :

KINDE_DOMAIN: Kinde domain e.g. mybusiness.kinde.com
KINDE_MANAGEMENT_CLIENT_ID: Client ID of your M2M token
KINDE_MANAGEMENT_CLIENT_SECRET: Client Secret of your M2M token


-- add / create server actions   -- next-save-action

npm i next-safe-action 

creates /actions/ separated actions for tickets and customers

creates search forms with results render on each page / customer and tickets/
creates header component 



-- installing shadcn table if not installed;


update customers page. integrate Sentry for compare perfomance.

npm i @tanstack/react-table

update and fix at getCustomerSearchResults query

update and fix getTicketSearchResults query

update and fix getOpenTickets query

create a ticket table component 
add table pagination by usting a table states
add column filters with:
--- create filter and  debounce input
--- update tickets page for integrate table

add column sorting



-- add react table live updates --

add data pooling with a some interval
create usePolling hook in /hooks
update tickettable component
update filter component
update notfound page - add go home link
create loading component
update home page add loading component make tests and delete it



ticket table update
filter update
ticket form update

update getCustomerSearchResults.ts query -- add order by

update customerform, and customer page - check permision on server non on client side

update safe-action in  /lib directory
update CustomerTable add colapse menu



npm audit report

npm audit fix --legacy-peer-deps --dry-run